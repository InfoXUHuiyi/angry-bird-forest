git 提交修改后的文件到远程库:

git status			//查看当前状态
git add 修改文件所在路径
git commit -m “......”	//提交注释
git push origin master
===========================================================================================
git 下载远程库的文件：

git remote -v			//查看远程分支
git fetch origin master:temp	//从远程的origin仓库的master分支下载到本地并新建一个分支temp
git diff temp			//比较master分支和temp分支的不同
git merge temp			//合并temp分支到master分支
git branch -d temp		//如果不想要temp分支了，可以删除此分支
==============================================================================================
//合并遇到冲突：error: Your local changes to the following files would be overwritten by merge:  
//xxx/xxx/xxx.java  
//Please, commit your changes or stash them before you can merge.  
//Aborting  

1.stash
通常遇到这个问题，你可以直接commit你的修改；或者使用git stash。
git stash	//备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。
git pull
git stash pop	//从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。
接下来diff一下此文件看看自动合并的情况，并作出相应修改。

stash其他命令：
git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。
git stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。

2.放弃本地修改，直接覆盖之
git reset --hard
git pull
===================================================================================================
